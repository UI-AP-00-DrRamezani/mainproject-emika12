package graphics.user.seller;


import account.making.Seller;
import allof.exceptions.AccessAllowance;
import allof.exceptions.notFound;
import allof.exceptions.wrongInputType;
import products.Product;
import project.first.SellerAccess;

import javax.swing.*;
import java.awt.*;
import java.util.InputMismatchException;
import java.util.jar.JarFile;

public class changeProduct2 extends javax.swing.JFrame {

    /**
     * Creates new form changeProduct2
     */
    public changeProduct2() {
        initComponents();
        items.setEnabled(false);
        jLabel1.setEnabled(false);
        change_txt.setEnabled(false);
        submit.setEnabled(false);

        setResizable(false);
        setVisible(true);

        check();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        items = new javax.swing.JComboBox<>();
        change_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        submit = new javax.swing.JToggleButton();
        endBtn = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        earmark_txt = new javax.swing.JTextField();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        items.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "name", "brand", "price", "in stock" }));
        items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsActionPerformed(evt);
            }
        });

        change_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_txtActionPerformed(evt);
            }
        });

        jLabel1.setText("new change:");

        submit.setText("submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        endBtn.setText("end");
        endBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endBtnActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("earmark");

        earmark_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                earmark_txtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(95, Short.MAX_VALUE)
                                .addComponent(submit)
                                .addGap(70, 70, 70)
                                .addComponent(endBtn)
                                .addGap(118, 118, 118))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(change_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(151, 151, 151)
                                                .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(earmark_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(earmark_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(change_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(submit)
                                        .addComponent(endBtn))
                                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void itemsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void endBtnActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            SellerAccess.changeProductInfo(p ,items.getSelectedItem().toString(),change_txt.getText());
        }catch (InputMismatchException e)
        {
            jLabel1.setText("wrong type!");
            jLabel1.setForeground(Color.red);
        }catch (IllegalArgumentException e){jLabel1.setText("wrong type!");
            jLabel1.setForeground(Color.red);}
        this.dispose();

    }

    private void change_txtActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void earmark_txtActionPerformed(java.awt.event.ActionEvent evt) {
        submit.setEnabled(true);
        items.setEnabled(true);
        change_txt.setEnabled(true);

        String category_type =null;
        try {
            p =SellerAccess.findEarmark(Integer.parseInt(earmark_txt.getText()));
            category_type=p.getCategory_model();
        }catch (InputMismatchException e){
            jLabel1.setText("wrong earmark!");
            jLabel1.setForeground(Color.red);
        }catch (notFound e)
        {
            jLabel1.setText(e.getMessage());
            jLabel1.setForeground(Color.red);
        }
        if (category_type !=null)
        {
            if (category_type.equals("digital products"))
            {
                items.addItem("ram space");
                items.addItem("memory");
                items.addItem("operating system");
                items.addItem("resolution");

            }else if (category_type.equals("house products"))
            {
                items.addItem("energy usage");
                items.addItem("guarantee");
            }else if (category_type.equals("outfit"))
            {
                items.addItem("produced");
                items.addItem("material");
            }else {
                items.addItem("pr date");
                items.addItem("ex date");
            }

        }
    }


    private void check()
    {
        try {
            SellerAccess.changingAllowed();
        }catch (AccessAllowance e) {
            JFrame j = new JFrame();
            JOptionPane.showMessageDialog(j, e.getMessage());
            this.dispose();
        }

    }

    // Variables declaration - do not modify
    private javax.swing.JTextField change_txt;
    private javax.swing.JTextField earmark_txt;
    private javax.swing.JToggleButton endBtn;
    private javax.swing.JComboBox<String> items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToggleButton submit;

    private Product p;
    // End of variables declaration
}
